[{"authors":[],"categories":[],"content":"Politica de privacidade\nA Byteverso opera o site \u0026ldquo;Byteverso\u0026rdquo; em https://www.byteverso.com. Eu levo sua privacidade a s√©rio. Para melhor proteger sua privacidade, forne√ßo este aviso de pol√≠tica de privacidade explicando como suas informa√ß√µes pessoais s√£o coletadas e usadas.\nColeta de informa√ß√µes de rotina\nEste site rastreia informa√ß√µes b√°sicas sobre seus visitantes. Essas informa√ß√µes incluem, mas n√£o est√£o limitadas a, endere√ßos IP, detalhes do navegador, carimbos de data/hora e p√°ginas de refer√™ncia. Nenhuma dessas informa√ß√µes pode identificar pessoalmente os visitantes espec√≠ficos deste site. As informa√ß√µes s√£o rastreadas para fins de administra√ß√£o e manuten√ß√£o de rotina.\nCookies\nSempre que necess√°rio, este site usa cookies para armazenar informa√ß√µes sobre as prefer√™ncias e o hist√≥rico de um visitante para melhor atend√™-lo e/ou apresentar ao visitante conte√∫do personalizado.\nPublicidade e terceiros\nParceiros de publicidade e outros terceiros podem usar cookies, scripts e/ou web beacons para rastrear as atividades do visitante neste site para exibir an√∫ncios e outras informa√ß√µes √∫teis. Tal rastreamento √© feito diretamente por terceiros atrav√©s de seus servidores e est√° sujeito √†s suas pol√≠ticas de privacidade. Este site n√£o tem acesso ou controle sobre esses cookies, scripts e/ou web beacons que podem ser usados ‚Äã‚Äãpor terceiros.\nInclu√≠ links neste site para seu uso e refer√™ncia. N√£o sou respons√°vel pelas pol√≠ticas de privacidade desses sites. Voc√™ deve estar ciente de que as pol√≠ticas de privacidade desses sites podem diferir das minhas.\nLink para a pol√≠tica de privacidade de provedores de servi√ßos terceirizados usados ‚Äã‚Äãpelo site\nGoogle Analytics Mudan√ßas a esta pol√≠tica\nEsta Pol√≠tica de Privacidade √© efetiva a partir de 11/12/2022 e permanecer√° em vigor, exceto no que diz respeito a quaisquer altera√ß√µes em suas disposi√ß√µes no futuro, que entrar√£o em vigor imediatamente ap√≥s sua publica√ß√£o nesta p√°gina. Eu me reservo o direito de atualizar ou alterar minha Pol√≠tica de Privacidade a qualquer momento e voc√™ deve verificar esta Pol√≠tica de Privacidade periodicamente. Se eu fizer qualquer altera√ß√£o material a esta Pol√≠tica de Privacidade, notificarei voc√™ por meio do endere√ßo de e-mail que voc√™ me forneceu ou colocando um aviso em destaque em meu site.\nContato\nPara qualquer d√∫vida ou preocupa√ß√£o sobre a pol√≠tica de privacidade, envie-me uma mensagem em instagram.com/byteverso\nThis privacy policy page was created by Arthur Gareginyan and modified/generated by Free \u0026amp; Open Source Privacy Policy Generator.\n","date":"February 28, 2019","img":"","lang":"en","langName":"","largeImg":"","permalink":"/politica-de-privacidade/","series":[],"smallImg":"","tags":[],"timestamp":1551312000,"title":"Politica de privacidade"},{"authors":[],"categories":[],"content":"Em in√∫meras situa√ß√µes as nossas requisi√ß√µes HTTP comunicam-se com API\u0026rsquo;s que recebem um alto volume de tr√°fego, portanto √°s vezes retornando respostas indesejadas, os famosos 5xx.\nFelizmente existe uma biblioteca em Go feito pela Hashicorp chamada go-retryablehttp que pode nos ajudar, observe o exemplo abaixo üëá\npackage main import ( \u0026#34;fmt\u0026#34; \u0026#34;log\u0026#34; \u0026#34;time\u0026#34; \u0026#34;github.com/hashicorp/go-retryablehttp\u0026#34; ) func main() { //Cria um novo http client c := retryablehttp.NewClient() //Configura o client para 10 tentativas c.RetryMax = 10 //Configura o m√≠nimo de tempo de espera c.RetryWaitMin = 1 * time.Second //Configura o m√°ximo tempo de espera c.RetryWaitMax = 10 * time.Second request, err := retryablehttp.NewRequest(\u0026#34;GET\u0026#34;, \u0026#34;http://example.com\u0026#34;, nil) if err != nil { log.Fatalln(err) } resp, err := c.Do(request) if err != nil { log.Fatalln(err) } fmt.Printf(\u0026#34;Requisi√ß√£o retornada com status %d\\n\u0026#34;, resp.StatusCode) } A biblioteca por s√≠ s√≥ j√° tem fun√ß√µes padr√µes para gerenciar o Backoff por√©m voc√™ pode tamb√©m passar fun√ß√µes customizadas para lidar com as respostas de erro.\ntype Client struct { HTTPClient *http.Client // Internal HTTP client. Logger interface{} // Customer logger instance. Can be either Logger or LeveledLogger RetryWaitMin time.Duration // Minimum time to wait RetryWaitMax time.Duration // Maximum time to wait RetryMax int // Maximum number of retries // RequestLogHook allows a user-supplied function to be called // before each retry. RequestLogHook RequestLogHook // ResponseLogHook allows a user-supplied function to be called // with the response from each HTTP request executed. ResponseLogHook ResponseLogHook // CheckRetry specifies the policy for handling retries, and is called // after each request. The default policy is DefaultRetryPolicy. CheckRetry CheckRetry // Backoff specifies the policy for how long to wait between retries Backoff Backoff // ErrorHandler specifies the custom error handler to use, if any ErrorHandler ErrorHandler loggerInit sync.Once clientInit sync.Once } ","date":"January 1, 1","img":"","lang":"en","langName":"","largeImg":"","permalink":"/golang/tutoriais/go-http-inteligente/","series":[],"smallImg":"","tags":[],"timestamp":-62135596800,"title":"Re-envio de requisi√ß√µes HTTP em GO"}]
