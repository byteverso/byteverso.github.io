<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Golang on BYTEVERSO</title>
    <link>https://www.byteverso.com/docs/golang/</link>
    <description>Recent content in Golang on BYTEVERSO</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>
</copyright><atom:link href="https://www.byteverso.com/docs/golang/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Re-envio de requisi√ß√µes HTTP em GO</title>
      <link>https://www.byteverso.com/docs/golang/retryhttp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.byteverso.com/docs/golang/retryhttp/</guid>
      <description><![CDATA[Em in√∫meras situa√ß√µes as nossas requisi√ß√µes HTTP comunicam-se com API&rsquo;s que recebem um alto volume de tr√°fego, portanto √°s vezes retornando respostas indesejadas, os famosos 5xx.
Felizmente existe uma biblioteca em Go feito pela Hashicorp chamada go-retryablehttp que pode nos ajudar, observe o exemplo abaixo üëá
package main import ( &#34;fmt&#34; &#34;log&#34; &#34;time&#34; &#34;github.com/hashicorp/go-retryablehttp&#34; ) func main() { //Cria um novo http client c := retryablehttp.NewClient() //Configura o client para 10 tentativas c.]]></description>
    </item>
    
  </channel>
</rss>

